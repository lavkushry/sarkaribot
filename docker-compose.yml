version: '3.8'

services:
  # PostgreSQL Database
  postgres_dev:
    image: postgres:15-alpine
    container_name: sarkaribot_postgres_dev
    environment:
      POSTGRES_DB: sarkaribot_dev
      POSTGRES_USER: sarkaribot_user
      POSTGRES_PASSWORD: sarkaribot_pass_2025
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - sarkaribot_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sarkaribot_user -d sarkaribot_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database for Pre-Production
  postgres_preprod:
    image: postgres:15-alpine
    container_name: sarkaribot_postgres_preprod
    environment:
      POSTGRES_DB: sarkaribot_preprod
      POSTGRES_USER: sarkaribot_user
      POSTGRES_PASSWORD: sarkaribot_pass_2025
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_preprod_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - sarkaribot_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sarkaribot_user -d sarkaribot_preprod"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Caching and Celery
  redis:
    image: redis:7-alpine
    container_name: sarkaribot_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sarkaribot_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: sarkaribot_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@sarkaribot.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - sarkaribot_network
    restart: unless-stopped
    depends_on:
      - postgres_dev
      - postgres_preprod

volumes:
  postgres_dev_data:
    driver: local
  postgres_preprod_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  sarkaribot_network:
    driver: bridge
