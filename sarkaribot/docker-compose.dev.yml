# Development environment Docker Compose
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: sarkaribot_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Web Application
  web:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.dev
    volumes:
      - ./backend:/app
      - media_data:/app/media
      - static_data:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DB_HOST=db
      - CACHE_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.dev
    volumes:
      - ./backend:/app
      - media_data:/app/media
    environment:
      - DEBUG=True
      - DB_HOST=db
      - CACHE_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A config worker --loglevel=info

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.dev
    volumes:
      - ./backend:/app
      - celery_beat_data:/app/celerybeat-schedule
    environment:
      - DEBUG=True
      - DB_HOST=db
      - CACHE_URL=redis://redis:6379/1
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A config beat --loglevel=info

  # React Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - REACT_APP_SITE_NAME=SarkariBot
    command: npm start

volumes:
  postgres_data:
  redis_data:
  media_data:
  static_data:
  celery_beat_data:
