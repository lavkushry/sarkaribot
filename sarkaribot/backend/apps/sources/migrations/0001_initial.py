# Generated by Django 5.2.4 on 2025-08-01 11:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SourceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('name', models.CharField(help_text='Category name', max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='URL-friendly slug', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Category description')),
                ('position', models.PositiveIntegerField(default=0, help_text='Display order position')),
            ],
            options={
                'verbose_name': 'Source Category',
                'verbose_name_plural': 'Source Categories',
                'ordering': ['position', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GovernmentSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('name', models.CharField(help_text="Short name for the government source (e.g., 'SSC', 'UPSC')", max_length=100, unique=True)),
                ('display_name', models.CharField(help_text="Full display name (e.g., 'Staff Selection Commission')", max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of the government department/agency')),
                ('base_url', models.URLField(help_text='Base URL of the government website', validators=[django.core.validators.URLValidator()])),
                ('logo_url', models.URLField(blank=True, help_text='URL to the official logo', null=True)),
                ('active', models.BooleanField(default=True, help_text='Whether this source should be actively scraped')),
                ('scrape_frequency', models.PositiveIntegerField(default=24, help_text='Scraping frequency in hours')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('error', 'Error'), ('maintenance', 'Under Maintenance')], default='active', help_text='Current scraping status', max_length=20)),
                ('last_scraped', models.DateTimeField(blank=True, help_text='Last time this source was successfully scraped', null=True)),
                ('last_error', models.TextField(blank=True, help_text='Last error message encountered during scraping')),
                ('total_jobs_found', models.PositiveIntegerField(default=0, help_text='Total number of jobs found from this source')),
                ('config_json', models.JSONField(default=dict, help_text='JSON configuration for scraping this source')),
            ],
            options={
                'verbose_name': 'Government Source',
                'verbose_name_plural': 'Government Sources',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='sources_gov_name_e8a724_idx'), models.Index(fields=['active', 'status'], name='sources_gov_active_950c14_idx'), models.Index(fields=['last_scraped'], name='sources_gov_last_sc_d3c7f4_idx')],
            },
        ),
        migrations.CreateModel(
            name='SourceStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('date', models.DateField(help_text='Date for these statistics')),
                ('scrapes_attempted', models.PositiveIntegerField(default=0, help_text='Number of scrape attempts')),
                ('scrapes_successful', models.PositiveIntegerField(default=0, help_text='Number of successful scrapes')),
                ('scrapes_failed', models.PositiveIntegerField(default=0, help_text='Number of failed scrapes')),
                ('jobs_found', models.PositiveIntegerField(default=0, help_text='New jobs found')),
                ('jobs_updated', models.PositiveIntegerField(default=0, help_text='Existing jobs updated')),
                ('average_response_time', models.FloatField(blank=True, help_text='Average response time in seconds', null=True)),
                ('total_pages_scraped', models.PositiveIntegerField(default=0, help_text='Total pages scraped')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='sources.governmentsource')),
            ],
            options={
                'verbose_name': 'Source Statistics',
                'verbose_name_plural': 'Source Statistics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['source', 'date'], name='sources_sou_source__041ea0_idx'), models.Index(fields=['date'], name='sources_sou_date_413b7f_idx')],
                'unique_together': {('source', 'date')},
            },
        ),
    ]
