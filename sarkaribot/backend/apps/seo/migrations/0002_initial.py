# Generated by Django 4.2.14 on 2025-08-01 15:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('seo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SitemapEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('url', models.URLField(help_text='Full URL of the page', unique=True)),
                ('change_frequency', models.CharField(choices=[('always', 'Always'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('never', 'Never')], default='weekly', help_text='How frequently the page is likely to change', max_length=20)),
                ('priority', models.DecimalField(decimal_places=1, default=0.5, help_text='Priority of this URL relative to other URLs on your site', max_digits=2, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('last_modified', models.DateTimeField(blank=True, help_text='When the page was last modified', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether to include this URL in the sitemap')),
            ],
            options={
                'ordering': ['-priority', '-last_modified'],
                'indexes': [models.Index(fields=['is_active', '-priority'], name='seo_sitemap_is_acti_fd4a12_idx'), models.Index(fields=['change_frequency'], name='seo_sitemap_change__3d67c7_idx'), models.Index(fields=['-last_modified'], name='seo_sitemap_last_mo_0a5f38_idx')],
            },
        ),
        migrations.CreateModel(
            name='SEOMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('content_type', models.CharField(choices=[('job_posting', 'Job Posting'), ('category_page', 'Category Page'), ('search_page', 'Search Page'), ('static_page', 'Static Page')], help_text='Type of content this metadata applies to', max_length=50)),
                ('content_id', models.PositiveIntegerField(blank=True, help_text='ID of the related content object', null=True)),
                ('url_path', models.CharField(help_text='URL path for this content', max_length=255, unique=True)),
                ('title', models.CharField(help_text='SEO title (50-60 characters)', max_length=60)),
                ('description', models.CharField(help_text='Meta description (150-160 characters)', max_length=160)),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated keywords')),
                ('canonical_url', models.URLField(blank=True, help_text='Canonical URL for this content')),
                ('structured_data', models.JSONField(default=dict, help_text='JSON-LD structured data')),
                ('og_title', models.CharField(blank=True, max_length=95)),
                ('og_description', models.CharField(blank=True, max_length=300)),
                ('og_image', models.URLField(blank=True)),
                ('og_type', models.CharField(default='website', max_length=50)),
                ('twitter_card', models.CharField(choices=[('summary', 'Summary'), ('summary_large_image', 'Summary Large Image'), ('app', 'App'), ('player', 'Player')], default='summary', max_length=20)),
                ('twitter_title', models.CharField(blank=True, max_length=70)),
                ('twitter_description', models.CharField(blank=True, max_length=200)),
                ('twitter_image', models.URLField(blank=True)),
                ('generation_method', models.CharField(choices=[('auto_nlp', 'Automatic NLP'), ('manual', 'Manual Entry'), ('template', 'Template Based')], default='auto_nlp', max_length=20)),
                ('quality_score', models.DecimalField(blank=True, decimal_places=2, help_text='Content quality score (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['content_type', 'content_id'], name='seo_seometa_content_fdc0b8_idx'), models.Index(fields=['url_path'], name='seo_seometa_url_pat_055fd6_idx'), models.Index(fields=['generation_method'], name='seo_seometa_generat_faf144_idx'), models.Index(fields=['-quality_score'], name='seo_seometa_quality_8d851f_idx')],
                'unique_together': {('content_type', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='KeywordTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('keyword', models.CharField(db_index=True, max_length=255)),
                ('target_url', models.URLField(help_text='URL this keyword should rank for')),
                ('current_position', models.PositiveIntegerField(blank=True, help_text='Current Google ranking position', null=True)),
                ('previous_position', models.PositiveIntegerField(blank=True, help_text='Previous ranking position', null=True)),
                ('best_position', models.PositiveIntegerField(blank=True, help_text='Best ever ranking position', null=True)),
                ('search_volume', models.PositiveIntegerField(blank=True, help_text='Monthly search volume', null=True)),
                ('difficulty_score', models.DecimalField(blank=True, decimal_places=2, help_text='Keyword difficulty score (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('is_target_keyword', models.BooleanField(default=True, help_text='Whether this is a target keyword for optimization')),
                ('last_checked', models.DateTimeField(blank=True, help_text='When the ranking was last checked', null=True)),
            ],
            options={
                'ordering': ['current_position', '-search_volume'],
                'indexes': [models.Index(fields=['keyword'], name='seo_keyword_keyword_bd98ca_idx'), models.Index(fields=['current_position'], name='seo_keyword_current_8d0945_idx'), models.Index(fields=['is_target_keyword', 'current_position'], name='seo_keyword_is_targ_ef6a0b_idx'), models.Index(fields=['-last_checked'], name='seo_keyword_last_ch_fdf126_idx')],
                'unique_together': {('keyword', 'target_url')},
            },
        ),
        migrations.CreateModel(
            name='SEOAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('audit_type', models.CharField(choices=[('metadata_generation', 'Metadata Generation'), ('keyword_analysis', 'Keyword Analysis'), ('sitemap_update', 'Sitemap Update'), ('structured_data', 'Structured Data Update'), ('performance_check', 'Performance Check')], help_text='Type of SEO audit performed', max_length=30)),
                ('content_type', models.CharField(blank=True, max_length=50)),
                ('content_id', models.PositiveIntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('skipped', 'Skipped')], default='success', max_length=20)),
                ('details', models.JSONField(default=dict, help_text='Detailed audit results')),
                ('processing_time', models.DecimalField(blank=True, decimal_places=3, help_text='Processing time in seconds', max_digits=10, null=True)),
                ('items_processed', models.PositiveIntegerField(default=0, help_text='Number of items processed')),
                ('triggered_by', models.ForeignKey(blank=True, help_text='User who triggered this audit', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['audit_type', '-created_at'], name='seo_seoaudi_audit_t_7fe33d_idx'), models.Index(fields=['status', '-created_at'], name='seo_seoaudi_status_63b126_idx'), models.Index(fields=['content_type', 'content_id'], name='seo_seoaudi_content_4e324e_idx')],
            },
        ),
    ]
